<?php  
require_once 'google-api-php-client/src/Google_Client.php';
require_once 'google-api-php-client/src/contrib/Google_AnalyticsService.php';
require_once 'google-api-php-client/src/contrib/Google_PlusService.php';

//constants definition
//scope defines the scope of the analytics - readonly
define('SCOPES','https://www.googleapis.com/auth/analytics.readonly');
//private key required for service accounts authentication
define('PRIVATE_KEY','be3c3443dfb041d42ceb33ef76937b24878fe9c2-privatekey.p12');
//clientid of the service account
define('CLIENT_ID','1076290322756-mgfner7ir4gq87t88mqlq77ps8tp93sv.apps.googleusercontent.com');
//this defines the access type which is by default online unless specified as offline
define('ACCESS_TYPE','offline_access');
//the gmail of the service account holder
define('SERVICE_GMAIL','1076290322756-mgfner7ir4gq87t88mqlq77ps8tp93sv@developer.gserviceaccount.com');
//analyticsid of the account
define('ANALYTICS_ID','ga:35141798');
//the start date of the report
define('START_DATE','2014-03-26');
//the end date of the report
define('END_DATE','2014-04-16');
//the type of report : pageviews or visits
define('METRICS_PAGEVIEWS','ga:pageviews' );
define('METRICS_VISITS','ga:visits');
define('SORT_PAGEVIEWS', '-ga:pageviews');
define('SORT_VISITS', '-ga:visits');
		

//the main menu for os_board
function os_board_menu() {
  $items = array();

//the default menu for displaying the most visited sites
  $items['os_board'] = array(
        'title' => 'OS dashboard',
        'description' => 'display most visited sites',
		'page callback' => 'most_visited_sites',
		'access callback' => TRUE,
    	);


  $items['os_board/most-visited-sites'] = array(
    'title' => 'Most visited sites',
    'type' => MENU_DEFAULT_LOCAL_TASK,
	'weight' => -10
  );

//the menu tab for displaying the most viewed pages
   $items['os_board/most-viewed-pages'] = array(
    'title' => 'Most viewed pages',
	'type' => MENU_LOCAL_TASK,
    'description' => 'displays most viewed pages',
	'page callback' => 'most_viewed_pages',
	'access callback' => TRUE,
	'weight' => -9  
  );
  
  return $items;
}

function design_output($type,$header_title,$header_number,$app_name){
    //variables definition block starts
    //parameters for access: the hostname, sort and max-results to be output
    if ($type == 'visits'){
       $optparams = array ('dimensions' => 'ga:hostname','sort' => SORT_VISITS,'max-results' => '25');}
    elseif ($type == 'pageviews') {
        $optparams = array ('dimensions' => 'ga:hostname','sort' => SORT_PAGEVIEWS,'max-results' => '25');
    }
    //path to the private key
    $file_contents = file_get_contents(drupal_get_path('module', 'os_board') . '/'.PRIVATE_KEY);
    $header = array($header_title,$header_number);
    //variables definition block ends
    $output ='';
    //create a new instance of Google_client
    $client = new Google_Client();
    // set the application name
    $client->setApplicationName($app_name);
    //set the credentials, clientid and accesstype
    $client->setAssertionCredentials(new Google_AssertionCredentials(SERVICE_GMAIL, array(SCOPES), $file_contents));
    $client->setClientId(CLIENT_ID);
    $client->setAccessType(ACCESS_TYPE);

    //create a new instance of google_analyticsservice
    $service = new Google_AnalyticsService($client);
    if ($type == 'visits'){
        $results = $service->data_ga->get(ANALYTICS_ID, START_DATE, END_DATE, METRICS_VISITS, $optparams);}
    else {
        $results = $service->data_ga->get(ANALYTICS_ID, START_DATE, END_DATE, METRICS_PAGEVIEWS, $optparams);
    }

       //return the output
    $output = array (
    'results' => $results,
    'header' => $header
    );
    return $output;
}
    /**
 * most_visited_sites
 * This returns the most visited sites by user. Data obtained from google analytics
 */
 function most_visited_sites(){
       $output ='';
       $rows = array();
       $results = design_output('visits','Most Visited Sites','Number Visited','OpenScholar Board');

         //tabulate the results in a table with header and data
		foreach($results['results']['rows'] as $result) {
			$rows[] = array($result[0],$result[1]);
		}	 
        $output .=  theme('table', array('header' => $results['header'], 'rows' => $rows));

        //return the output
        return $output;
		
 }
/*
   * most_viewed_pages
   * This returns the most viewed pages by user. Data obtained from google analytics
  */
 function most_viewed_pages(){
     $output ='';
     $rows = array();
     $results = design_output('pageviews','Most Viewed Pages','Number Visited','OpenScholar Board');
   //  dvm($results['results']['rows']);
     //tabulate the results in a table with header and data
      foreach($results['results']['rows'] as $result) {
         $rows[] = array($result[0],$result[1]);
     }
     $output .=  theme('table', array('header' => $results['header'], 'rows' => $rows));

     //return the output
     return $output; 
 }
 